// Â© SS220, An EULA/CLA with a hosting restriction, full text: https://raw.githubusercontent.com/SerbiaStrong-220/space-station-14/master/CLA.txt
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.SS220.RoundEnd.UI;

[GenerateTypedNameReferences]
public sealed partial class RoundEndTitlesRole : Control
{
    private const float WidthThreshold = 700;
    private readonly int _index;

    public RoundEndTitlesRole()
    {
        RobustXamlLoader.Load(this);
    }

    public RoundEndTitlesRole(string oocName, string icName, string role, int index, Color color, NetEntity? dollEntity) : this()
    {
        _index = index;
        NickNameLabel.Text = oocName;
        RoleNameLabel.Text = $"{char.ToUpper(role[0])}{role.AsSpan(1)}";
        CharacterNameLabel.Text = icName;
        RoleNameLabel.FontColorOverride = color;
        if (dollEntity.HasValue)
        {
            DollView.SetEntity(dollEntity.Value);
        }
    }

    protected override void Resized()
    {
        RefreshDollPlacement();
    }

    private void RefreshDollPlacement()
    {
        var isLarge = Width >= WidthThreshold;
        if (_index % 2 == 0 || !isLarge)
        {
            PlaceDollTo(DollContainerLeft);
        }
        else
        {
            PlaceDollTo(DollContainerRight);
        }
    }

    private void PlaceDollTo(Control container)
    {
        if (DollView.Parent == container)
            return;
        DollView.Orphan();
        container.AddChild(DollView);
    }
}
